<EditForm Model="CrewChange" OnValidSubmit="ValidSubmitCallback">
    <ObjectGraphDataAnnotationsValidator />
    <ValidationSummary />

    <RaceSelect @bind-Value="CrewChange.RaceId" />

    <ManagerSelect @bind-ClubId="CrewChange.ClubId" @bind-ManagerId="CrewChange.SentById" />

    <div class="form-group row">
        <label for="bow-number" class="col-sm-3 col-form-label">Startnummer</label>
        <div class="col-sm-9">
            <InputNumber @bind-Value="CrewChange.BowNumber" id="bow-number" class="form-control" />
        </div>
    </div>

    @for (int i = 0; i < CrewChange.Substitutions.Count; i++)
    {
        var substitution = CrewChange.Substitutions[i];

        <div class="card form-group">

            <div class="card-header d-flex justify-content-between align-items-center">
                <span>Änderung Nr. @(i + 1)</span>

                <button @onclick="() => CrewChange.Substitutions.Remove(substitution)"
                        type="button" class="btn-sm btn-outline-danger">
                    Löschen
                </button>
            </div>

            <ul class="list-group list-group-flush">
                <li class="list-group-item">
                    <AddAthleteFormFields Athlete="substitution.Old" IdPrefix="@i.ToString()" />
                </li>
                <li class="list-group-item text-center">
                    wird ersetzt durch
                </li>
                <li class="list-group-item">
                    <AddAthleteFormFields Athlete="substitution.New" IdPrefix="@i.ToString()" />
                </li>
            </ul>
        </div>
    }

    <div class="form-group">
        <button @onclick="() => CrewChange.Substitutions.Add(new AddSubstitutionDto())"
                type="button" class="btn btn-secondary btn-block">
            Änderung hinzufügen
        </button>
    </div>

    <div class="form-group form-check">
        <InputCheckbox @bind-Value="CrewChange.SendEmailConfirmation" class="form-check-input" id="send-email" />
        <label for="send-email" class="form-check-label">Kopie per E-Mail zusenden</label>
        <small class="form-text text-muted">
            Eine Kopie der eingegebenen Daten wird als Bestätigung an die hinterlegte E-Mail geschickt.
        </small>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Absenden</button>
    </div>

</EditForm>

@code {
    [Parameter]
    public AddCrewChangeDto CrewChange { get; set; } = new();

    [Parameter]
    public EventCallback ValidSubmitCallback { get; set; }
}
