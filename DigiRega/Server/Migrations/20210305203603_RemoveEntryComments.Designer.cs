// <auto-generated />
using System;
using DigiRega.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DigiRega.Server.Migrations
{
    [DbContext(typeof(DigiRegaDbContext))]
    [Migration("20210305203603_RemoveEntryComments")]
    partial class RemoveEntryComments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("DigiRega.Server.Model.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("DigiRega.Server.Model.EmailMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmailMessages");
                });

            modelBuilder.Entity("DigiRega.Server.Model.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ClubId")
                        .HasColumnType("integer");

                    b.Property<string>("EntryType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RaceId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SentById")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("RaceId");

                    b.HasIndex("SentById");

                    b.ToTable("Entries");

                    b.HasDiscriminator<string>("EntryType").HasValue("Entry");
                });

            modelBuilder.Entity("DigiRega.Server.Model.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("LongName")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("DigiRega.Server.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Type").HasValue("User");
                });

            modelBuilder.Entity("DigiRega.Server.Model.CrewChange", b =>
                {
                    b.HasBaseType("DigiRega.Server.Model.Entry");

                    b.Property<int>("BowNumber")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("BowNumber");

                    b.HasDiscriminator().HasValue("CrewChange");
                });

            modelBuilder.Entity("DigiRega.Server.Model.LateEntry", b =>
                {
                    b.HasBaseType("DigiRega.Server.Model.Entry");

                    b.HasDiscriminator().HasValue("LateEntry");
                });

            modelBuilder.Entity("DigiRega.Server.Model.Withdrawal", b =>
                {
                    b.HasBaseType("DigiRega.Server.Model.Entry");

                    b.Property<int>("BowNumber")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("BowNumber");

                    b.HasDiscriminator().HasValue("Withdrawal");
                });

            modelBuilder.Entity("DigiRega.Server.Model.Manager", b =>
                {
                    b.HasBaseType("DigiRega.Server.Model.User");

                    b.Property<int>("ClubId")
                        .HasColumnType("integer");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("ClubId");

                    b.HasDiscriminator().HasValue("Manager");
                });

            modelBuilder.Entity("DigiRega.Server.Model.StaffMember", b =>
                {
                    b.HasBaseType("DigiRega.Server.Model.User");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("StaffMember");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 247, 76, 209, 160, 53, 214, 107, 180, 58, 27, 155, 226, 254, 95, 60, 157, 101, 197, 0, 82, 221, 22, 181, 145, 50, 10, 198, 186, 49, 42, 82, 218, 215, 86, 189, 95, 212, 223, 14, 197, 46, 155, 47, 169, 234, 251, 65, 151, 54, 160, 101, 233, 31, 169, 59, 44, 215, 22, 254, 249, 60, 167, 44, 5 },
                            PasswordSalt = new byte[] { 99, 139, 186, 68, 36, 17, 190, 173, 48, 238, 57, 149, 11, 6, 17, 74, 55, 136, 233, 113, 129, 155, 57, 13, 83, 207, 201, 76, 239, 215, 52, 179, 137, 164, 46, 66, 228, 76, 78, 73, 211, 124, 56, 165, 162, 73, 209, 73, 74, 160, 243, 186, 0, 142, 157, 9, 204, 202, 172, 41, 180, 169, 17, 25, 94, 9, 103, 194, 117, 45, 18, 135, 90, 1, 119, 57, 249, 118, 200, 217, 165, 15, 22, 11, 189, 89, 12, 102, 152, 142, 137, 137, 185, 112, 28, 189, 208, 9, 233, 107, 217, 87, 191, 177, 179, 2, 49, 46, 233, 171, 119, 163, 108, 28, 160, 109, 250, 198, 89, 162, 79, 231, 190, 163, 221, 139, 145, 183 },
                            Username = "admin",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("DigiRega.Server.Model.EmailMessage", b =>
                {
                    b.OwnsOne("DigiRega.Server.Model.EmailRecipient", "Recipient", b1 =>
                        {
                            b1.Property<int>("EmailMessageId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .UseIdentityByDefaultColumn();

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("EmailMessageId");

                            b1.ToTable("EmailMessages");

                            b1.WithOwner()
                                .HasForeignKey("EmailMessageId");
                        });

                    b.Navigation("Recipient")
                        .IsRequired();
                });

            modelBuilder.Entity("DigiRega.Server.Model.Entry", b =>
                {
                    b.HasOne("DigiRega.Server.Model.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigiRega.Server.Model.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigiRega.Server.Model.Manager", "SentBy")
                        .WithMany()
                        .HasForeignKey("SentById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Race");

                    b.Navigation("SentBy");
                });

            modelBuilder.Entity("DigiRega.Server.Model.User", b =>
                {
                    b.OwnsMany("DigiRega.Server.Model.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .UseIdentityByDefaultColumn();

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<DateTime>("ExpiresAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("UserId", "Id");

                            b1.ToTable("Users_RefreshTokens");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("DigiRega.Server.Model.CrewChange", b =>
                {
                    b.OwnsMany("DigiRega.Server.Model.Substitution", "Substitutions", b1 =>
                        {
                            b1.Property<int>("CrewChangeId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .UseIdentityByDefaultColumn();

                            b1.HasKey("CrewChangeId", "Id");

                            b1.ToTable("Substitution");

                            b1.WithOwner()
                                .HasForeignKey("CrewChangeId");

                            b1.OwnsOne("DigiRega.Server.Model.Athlete", "New", b2 =>
                                {
                                    b2.Property<int>("SubstitutionCrewChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("SubstitutionId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .UseIdentityByDefaultColumn();

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("YearOfBirth")
                                        .HasColumnType("integer");

                                    b2.HasKey("SubstitutionCrewChangeId", "SubstitutionId");

                                    b2.ToTable("Substitution");

                                    b2.WithOwner()
                                        .HasForeignKey("SubstitutionCrewChangeId", "SubstitutionId");
                                });

                            b1.OwnsOne("DigiRega.Server.Model.Athlete", "Old", b2 =>
                                {
                                    b2.Property<int>("SubstitutionCrewChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("SubstitutionId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .UseIdentityByDefaultColumn();

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("YearOfBirth")
                                        .HasColumnType("integer");

                                    b2.HasKey("SubstitutionCrewChangeId", "SubstitutionId");

                                    b2.ToTable("Substitution");

                                    b2.WithOwner()
                                        .HasForeignKey("SubstitutionCrewChangeId", "SubstitutionId");
                                });

                            b1.Navigation("New")
                                .IsRequired();

                            b1.Navigation("Old")
                                .IsRequired();
                        });

                    b.Navigation("Substitutions");
                });

            modelBuilder.Entity("DigiRega.Server.Model.LateEntry", b =>
                {
                    b.OwnsMany("DigiRega.Server.Model.CrewMember", "Crew", b1 =>
                        {
                            b1.Property<int>("LateEntryId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .UseIdentityByDefaultColumn();

                            b1.Property<int>("Position")
                                .HasColumnType("integer");

                            b1.HasKey("LateEntryId", "Id");

                            b1.ToTable("CrewMember");

                            b1.WithOwner()
                                .HasForeignKey("LateEntryId");

                            b1.OwnsOne("DigiRega.Server.Model.Athlete", "Athlete", b2 =>
                                {
                                    b2.Property<int>("CrewMemberLateEntryId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("CrewMemberId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .UseIdentityByDefaultColumn();

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("YearOfBirth")
                                        .HasColumnType("integer");

                                    b2.HasKey("CrewMemberLateEntryId", "CrewMemberId");

                                    b2.ToTable("CrewMember");

                                    b2.WithOwner()
                                        .HasForeignKey("CrewMemberLateEntryId", "CrewMemberId");
                                });

                            b1.Navigation("Athlete")
                                .IsRequired();
                        });

                    b.Navigation("Crew");
                });

            modelBuilder.Entity("DigiRega.Server.Model.Manager", b =>
                {
                    b.HasOne("DigiRega.Server.Model.Club", "Club")
                        .WithMany("Managers")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("DigiRega.Server.Model.Club", b =>
                {
                    b.Navigation("Managers");
                });
#pragma warning restore 612, 618
        }
    }
}
