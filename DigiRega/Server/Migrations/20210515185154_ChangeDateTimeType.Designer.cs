// <auto-generated />
using System;
using DigiRega.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DigiRega.Server.Migrations
{
    [DbContext(typeof(DigiRegaDbContext))]
    [Migration("20210515185154_ChangeDateTimeType")]
    partial class ChangeDateTimeType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("DigiRega.Server.Model.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("DigiRega.Server.Model.EmailMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmailMessages");
                });

            modelBuilder.Entity("DigiRega.Server.Model.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ClubId")
                        .HasColumnType("integer");

                    b.Property<string>("EntryType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RaceId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SentById")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("RaceId");

                    b.HasIndex("SentById");

                    b.ToTable("Entries");

                    b.HasDiscriminator<string>("EntryType").HasValue("Entry");
                });

            modelBuilder.Entity("DigiRega.Server.Model.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("DigiRega.Server.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Type").HasValue("User");
                });

            modelBuilder.Entity("DigiRega.Server.Model.CrewChange", b =>
                {
                    b.HasBaseType("DigiRega.Server.Model.Entry");

                    b.Property<int>("BowNumber")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("BowNumber");

                    b.HasDiscriminator().HasValue("CrewChange");
                });

            modelBuilder.Entity("DigiRega.Server.Model.LateEntry", b =>
                {
                    b.HasBaseType("DigiRega.Server.Model.Entry");

                    b.HasDiscriminator().HasValue("LateEntry");
                });

            modelBuilder.Entity("DigiRega.Server.Model.Withdrawal", b =>
                {
                    b.HasBaseType("DigiRega.Server.Model.Entry");

                    b.Property<int>("BowNumber")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("BowNumber");

                    b.HasDiscriminator().HasValue("Withdrawal");
                });

            modelBuilder.Entity("DigiRega.Server.Model.Manager", b =>
                {
                    b.HasBaseType("DigiRega.Server.Model.User");

                    b.Property<int>("ClubId")
                        .HasColumnType("integer");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("ClubId");

                    b.HasDiscriminator().HasValue("Manager");
                });

            modelBuilder.Entity("DigiRega.Server.Model.StaffMember", b =>
                {
                    b.HasBaseType("DigiRega.Server.Model.User");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("StaffMember");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 234, 194, 168, 170, 219, 23, 171, 153, 7, 3, 232, 160, 200, 142, 100, 36, 215, 153, 32, 35, 239, 245, 112, 124, 192, 120, 17, 61, 227, 103, 171, 138, 206, 110, 50, 139, 78, 198, 52, 227, 133, 151, 59, 66, 5, 218, 40, 25, 158, 170, 127, 4, 62, 80, 72, 96, 10, 30, 240, 217, 192, 50, 47, 86 },
                            PasswordSalt = new byte[] { 208, 101, 190, 118, 176, 2, 21, 99, 21, 209, 73, 15, 84, 207, 158, 82, 64, 42, 33, 75, 244, 87, 9, 58, 163, 12, 59, 245, 119, 181, 174, 33, 107, 53, 29, 17, 185, 160, 48, 192, 141, 64, 229, 84, 81, 187, 185, 58, 106, 52, 223, 77, 174, 153, 21, 67, 63, 43, 195, 190, 134, 234, 177, 104, 68, 200, 22, 86, 154, 148, 200, 41, 62, 177, 108, 179, 134, 71, 221, 11, 205, 17, 113, 109, 195, 103, 73, 52, 23, 187, 83, 43, 0, 148, 204, 211, 198, 35, 112, 115, 160, 1, 102, 29, 69, 247, 203, 90, 241, 16, 82, 93, 38, 122, 78, 70, 205, 103, 218, 73, 12, 127, 235, 14, 61, 22, 76, 49 },
                            Username = "admin",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("DigiRega.Server.Model.EmailMessage", b =>
                {
                    b.OwnsOne("DigiRega.Server.Model.EmailRecipient", "Recipient", b1 =>
                        {
                            b1.Property<int>("EmailMessageId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .UseIdentityByDefaultColumn();

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("EmailMessageId");

                            b1.ToTable("EmailMessages");

                            b1.WithOwner()
                                .HasForeignKey("EmailMessageId");
                        });

                    b.Navigation("Recipient")
                        .IsRequired();
                });

            modelBuilder.Entity("DigiRega.Server.Model.Entry", b =>
                {
                    b.HasOne("DigiRega.Server.Model.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigiRega.Server.Model.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigiRega.Server.Model.Manager", "SentBy")
                        .WithMany()
                        .HasForeignKey("SentById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Race");

                    b.Navigation("SentBy");
                });

            modelBuilder.Entity("DigiRega.Server.Model.User", b =>
                {
                    b.OwnsMany("DigiRega.Server.Model.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .UseIdentityByDefaultColumn();

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<DateTime>("ExpiresAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("UserId", "Id");

                            b1.ToTable("Users_RefreshTokens");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("DigiRega.Server.Model.CrewChange", b =>
                {
                    b.OwnsMany("DigiRega.Server.Model.Substitution", "Substitutions", b1 =>
                        {
                            b1.Property<int>("CrewChangeId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .UseIdentityByDefaultColumn();

                            b1.HasKey("CrewChangeId", "Id");

                            b1.ToTable("Substitution");

                            b1.WithOwner()
                                .HasForeignKey("CrewChangeId");

                            b1.OwnsOne("DigiRega.Server.Model.Athlete", "New", b2 =>
                                {
                                    b2.Property<int>("SubstitutionCrewChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("SubstitutionId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .UseIdentityByDefaultColumn();

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("YearOfBirth")
                                        .HasColumnType("integer");

                                    b2.HasKey("SubstitutionCrewChangeId", "SubstitutionId");

                                    b2.ToTable("Substitution");

                                    b2.WithOwner()
                                        .HasForeignKey("SubstitutionCrewChangeId", "SubstitutionId");
                                });

                            b1.OwnsOne("DigiRega.Server.Model.Athlete", "Old", b2 =>
                                {
                                    b2.Property<int>("SubstitutionCrewChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("SubstitutionId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .UseIdentityByDefaultColumn();

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("YearOfBirth")
                                        .HasColumnType("integer");

                                    b2.HasKey("SubstitutionCrewChangeId", "SubstitutionId");

                                    b2.ToTable("Substitution");

                                    b2.WithOwner()
                                        .HasForeignKey("SubstitutionCrewChangeId", "SubstitutionId");
                                });

                            b1.Navigation("New")
                                .IsRequired();

                            b1.Navigation("Old")
                                .IsRequired();
                        });

                    b.Navigation("Substitutions");
                });

            modelBuilder.Entity("DigiRega.Server.Model.LateEntry", b =>
                {
                    b.OwnsMany("DigiRega.Server.Model.CrewMember", "Crew", b1 =>
                        {
                            b1.Property<int>("LateEntryId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .UseIdentityByDefaultColumn();

                            b1.Property<int>("Position")
                                .HasColumnType("integer");

                            b1.HasKey("LateEntryId", "Id");

                            b1.ToTable("CrewMember");

                            b1.WithOwner()
                                .HasForeignKey("LateEntryId");

                            b1.OwnsOne("DigiRega.Server.Model.Athlete", "Athlete", b2 =>
                                {
                                    b2.Property<int>("CrewMemberLateEntryId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("CrewMemberId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .UseIdentityByDefaultColumn();

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("YearOfBirth")
                                        .HasColumnType("integer");

                                    b2.HasKey("CrewMemberLateEntryId", "CrewMemberId");

                                    b2.ToTable("CrewMember");

                                    b2.WithOwner()
                                        .HasForeignKey("CrewMemberLateEntryId", "CrewMemberId");
                                });

                            b1.Navigation("Athlete")
                                .IsRequired();
                        });

                    b.Navigation("Crew");
                });

            modelBuilder.Entity("DigiRega.Server.Model.Manager", b =>
                {
                    b.HasOne("DigiRega.Server.Model.Club", "Club")
                        .WithMany("Managers")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("DigiRega.Server.Model.Club", b =>
                {
                    b.Navigation("Managers");
                });
#pragma warning restore 612, 618
        }
    }
}
